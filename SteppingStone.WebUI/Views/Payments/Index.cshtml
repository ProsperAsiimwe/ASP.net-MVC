@model SteppingStone.WebUI.Models.Payments.PaymentListViewModel
@{
    ViewBag.Title = "Payments";
    //var total = Model.TotalBalance > 0 ? string.Format("Ugx {0} /=", Model.TotalBalance.ToString("n0")) : "Ugx 0 /=";
}

<section class="page-header">
    <div class="container">        
        <div class="row">
            <div class="col-sm-9">
                <h1>@ViewBag.Title summing to @Model.TotalPaid.ToString("n0")/=</h1>
                <p>Below are all the Payments that have been added to the system. Click View to see more details.</p>
            </div>
            <div class="col-sm-3 col-cta">
                @Html.Bootstrap().ActionLinkButton("New Payment" , "New").Style(ButtonStyle.Primary).AppendIcon("fa fa-plus")
            </div>
        </div>
    </div>
</section>

<section class="section-light">
    <div class="container">
        @Html.Partial("Partials/_SearchPayments", Model.SearchModel)
        @*@if (!Model.SearchModel.IsEmpty())
        {
            <hr />
            <div class="row">
                <div class="col-sm-3">
                    <h3 style="text-align:center">Summing To</h3>
                    <h4 style="color: #6666FF; text-align:center"><strong>@total</strong></h4>
                </div>
                <div class="col-sm-3">
                    <h3 style="text-align:center">Arrears</h3>
                    <h4 style="color: #006600; text-align:center"><strong>Ugx @Model.TotalBalance.ToString("n0") /=</strong></h4>
                </div>
                <div class="col-sm-3">
                    <h3 style="text-align:center">Pending</h3>
                    <h4 style="color: #996600; text-align:center"><strong>Ugx @Model.Pending.ToString("n0") /=</strong></h4>
                </div>
                <div class="col-sm-3">
                    <h3 style="text-align:center">Oustanding</h3>
                    <h4 style="color: #FF0000; text-align:center"><strong>Ugx @Model.Oustanding.ToString("n0") /=</strong></h4>
                </div>
            </div>
            <hr />
        }*@
        <div class="table-responsive">
            <table class="table table-striped table-cms">
                <thead>
                    <tr>
                        <th></th>
                        <th>Pupil's Name</th>
                        <th>Class</th>
                        <th>Term</th>
                        <th>Date</th>
                        <th>Amount (Ugx)</th>
                        <th>Balance (Ugx)</th>                        
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Payments.Count() > 0) {
                        foreach (var item in Model.Payments) {
                            string css = item.GetStatusCssClass();
                            ButtonStyle button_css = SteppingStone.WebUI.Infrastructure.Helpers.PaymentHelper.GetButtonStyle(css);
                            <tr class="@css">
                                <td class="col-sm-1">@Html.Bootstrap().ActionLinkButton("View", "Show").RouteValues(new { PaymentId = item.PaymentId }).Style(button_css)</td>
                                <td>@item.Student.FullName</td>
                                <td>@item.ClassLevel.GetClass()</td>
                                <td>@item.Term.GetTerm()</td>
                                <td>@InputHelper.ParseDate(item.Date, "ddd, dd MMM yyyy")</td>
                                <td>@item.GetAmount()</td>
                                <td>@item.Student.Outstanding.ToString("n0")/=</td>                                
                            </tr>
                        }
                    }
                    else {
                        <tr>
                            <td colspan="7">There are no records matching your search criteria</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="clearfix">
            <div class="pull-right">
                <div class="pagination-panel">
                    <div class="pagination-labels">@Model.PagingInfo.ItemsFrom to @Model.PagingInfo.ItemsTo of @Model.PagingInfo.TotalItems Payments</div>
                    @Html.PageLinks(Model.PagingInfo, x => Url.Action("Index", new { page = x }))
                </div>
            </div>
        </div>
    </div>
</section>

@section BreadcrumbDark {
    <li class="active">Payments</li>
}
@section Menu{
<li>@Html.Bootstrap().ActionLink("New Pupil", "New", "Students").AppendIcon("fa fa-plus")</li>
}

