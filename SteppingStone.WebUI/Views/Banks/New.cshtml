@model SteppingStone.WebUI.Models.Banks.BankViewModel
@{
    string action, cancel_url, buttonText, instr, glyph;
    bool isAdmin = PageData["isAdmin"];

    if (Model.BankId > 0) {
        cancel_url = Url.Action("Show", new { BankId = Model.BankId });
        action = "Update";
        buttonText = "Update Bank";
        instr = "Modify the details and click Update to apply changes";
        glyph = "glyphicon glyphicon-thumbs-up";
        ViewBag.Title = "Update Bank";
    }
    else {
        cancel_url = Url.Action("Index");
        action = "Create";
        buttonText = "Create Bank";
        instr = "Complete the form below and click Create to add a new Bank";
        glyph = "glyphicon glyphicon-plus";
        ViewBag.Title = "New Bank";
    }
}

<div class="page-header">
    <div class="container">
        <h1>@ViewBag.Title</h1>
        <p>
            @instr
        </p>
    </div>
</div>
<div class="section-light">
    <div class="container">
        <div class="form-light-bg form-container">
            @Html.ValidationSummary(true)

            @using (var f = Html.Bootstrap().Begin(new Form(action))) {
                <div class="row">
                    <div class="col-md-6">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.BankId)

                        <fieldset>
                            <legend>Bank details</legend>
                            @f.FormGroup().TextBoxFor(m => m.Name).Placeholder()             
                        </fieldset>
                    </div>
                    <div class="col-md-6">
                        <fieldset>
                            <legend>... details</legend>
                            @f.FormGroup().TextBoxFor(m => m.AccountNo).Placeholder()                           
                        </fieldset>                       
                    </div>

                </div>
                <div class="form-submit">
                    @Html.Bootstrap().SubmitButton().Style(ButtonStyle.Default).ButtonBlock().Text(buttonText).AppendIcon(glyph)
                </div>
            }
        </div>

    </div>
</div>

@section Scripts {
}

@section Menu {
    <li><a href="@cancel_url">Cancel <i class="fa fa-window-close"></i></a></li>
}
@section BreadcrumbLight {
@if (Model.BankId > 0) {
    Html.RenderAction("GetBreadcrumb", new { BankId = Model.BankId });
    <li class="active">Edit Bank</li>
}
else {    
    <li>@Html.ActionLink("Banks", "Index")</li>
    <li class="active">New Bank</li>
}
}
