@model SteppingStone.WebUI.Models.Messages.MessageViewModel
@{
    string action, cancel_url, buttonText, instr, glyph;
    //bool isAdmin = PageData["isAdmin"];

    if (Model.MessageId > 0)
    {
        cancel_url = Url.Action("Show", new { MessageId = Model.MessageId });
        action = "Update";
        buttonText = "Update Message";
        instr = "Modify the details and click Update to apply changes";
        glyph = "glyphicon glyphicon-thumbs-up";
        ViewBag.Title = "Update Message";
    }
    else
    {
        cancel_url = Url.Action("Index");
        action = "Create";
        buttonText = "Send Message";
        instr = "Complete the form below and click Create to add a new Message";
        glyph = "glyphicon glyphicon-plus";
        ViewBag.Title = "New Message";
    }
}
<div class="page-header">
    <div class="container">
        <h1>@ViewBag.Title</h1>
        <p>
            @instr
        </p>
    </div>
</div>
<div class="section-light">
    <div class="container">
        <div class="form-light-bg form-container">
            @Html.ValidationSummary(true)
            @using (var f = Html.Bootstrap().Begin(new Form(action).FormMethod(FormMethod.Post)))
            {

                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.MessageId)
                <div class="col-md-6">
                    <fieldset>
                        <legend>Message details</legend>
                        @f.FormGroup().TextAreaFor(x => x.MessageDescription)
                    </fieldset>
                </div>
                <div class="col-md-6">
                    <fieldset>
                        <legend>Sending details</legend>
                        @f.FormGroup().EditorFor(x => x.SendNow)

                        <div id="schedule">
                            <div class="alert alert-warning">
                                Specify the date you wish the message to be sent
                            </div>
                            @f.FormGroup().EditorFor(x => x.Scheduled)
                        </div>                       

                    </fieldset>
                </div>
                                
                <div class="form-submit">
                    @Html.Bootstrap().SubmitButton().Style(ButtonStyle.Default).ButtonBlock().Text(buttonText).AppendIcon(glyph)
                </div>
            }
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/Scripts/admin/message.js"></script>
}
@section Menu {
    <li><a href="@cancel_url">Cancel <i class="fa fa-window-close"></i></a></li>
}
@section BreadcrumbLight {
    @if (Model.MessageId > 0)
    {
        Html.RenderAction("GetBreadcrumb", new { MessageId = Model.MessageId });
        <li class="active">Edit Event</li>
    }
    else
    {
        <li>@Html.ActionLink("Messages", "Index")</li>
        <li class="active">New Message</li>
    }
}




