@model SteppingStone.WebUI.Models.Events.EventListViewModel
@{
    ViewBag.Title = "Events";
}

<section class="page-header">
    <div class="container">        
        <div class="row">
            <div class="col-sm-9">
                <h1>@ViewBag.Title</h1>
                <p>Below are all the Events that have been added to the system. Click View to see more details.</p>
            </div>
            <div class="col-sm-3">
                @Html.Bootstrap().ActionLinkButton("New Event" , "New").Style(ButtonStyle.Primary).AppendIcon("fa fa-plus")
            </div>
        </div>
    </div>
</section>

<section class="section-light">
    <div class="container">
        @Html.Partial("Partials/_SearchEvents", Model.SearchModel)
        <div class="table-responsive">
            <table class="table table-striped table-cms">
                <thead>
                    <tr>
                        <th></th>
                        <th>Event Name</th>
                        <th>Event Date</th>
                        <th>Notification Date</th>
                        <th>Notified?</th>
                        <th>No of Parents</th>                     
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Events.Count() > 0) {
                        foreach (var item in Model.Events) {
                            string css = item.GetStatusCssClass();
                            ButtonStyle button_css = SteppingStone.WebUI.Infrastructure.Helpers.EventHelper.GetButtonStyle(css);
                            <tr class="@css">
                                <td class="col-sm-1">@Html.Bootstrap().ActionLinkButton("View", "Show").RouteValues(new { EventId = item.EventId }).Style(button_css)</td>
                                <td>@item.Name</td>
                                <td>@InputHelper.ParseDate(item.EventDate, "ddd, dd MMM yyyy")</td>
                                <td>@InputHelper.ParseDate(item.NotificationDate, "ddd, dd MMM yyyy")</td>
                                <td>@InputHelper.ParseBool(item.Notified.HasValue)</td>
                                <td>@item.NoOfParents()</td>                               
                            </tr>
                        }
                    }
                    else {
                        <tr>
                            <td colspan="6">There are no records matching your search criteria</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="clearfix">
            <div class="pull-right">
                <div class="pagination-panel">
                    <div class="pagination-labels">@Model.PagingInfo.ItemsFrom to @Model.PagingInfo.ItemsTo of @Model.PagingInfo.TotalItems Events</div>
                    @Html.PageLinks(Model.PagingInfo, x => Url.Action("Index", new { page = x }))
                </div>
            </div>
        </div>
    </div>
</section>

@section BreadcrumbDark {
    <li class="active">Events</li>
}
@section Menu {
    @*<li>@Html.Bootstrap().ActionLink("Notify Guardians", "Notify").AppendIcon("fa fa-phone").HtmlAttributes(new { style = "color:red;" })</li>
    <li>@Html.Bootstrap().ActionLink("New Payment", "New", "Payments").AppendIcon("fa fa-plus")</li>*@
    <li>@Html.Bootstrap().ActionLink("Calendar", "Calendar", "Events").AppendIcon("fa fa-calendar")</li>
}
